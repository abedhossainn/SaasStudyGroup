rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if user is a group member
    function isGroupMember(groupId) {
      return isAuthenticated() && 
        request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
    }

    // Helper function to check if user is the group creator
    function isGroupCreator(groupId) {
      return isAuthenticated() && 
        request.auth.uid == get(/databases/$(database)/documents/groups/$(groupId)).data.createdBy;
    }

    // ðŸ”¹ Messages Collection
    match /messages/{message} {
      // Allow any authenticated user to read messages
      allow read: if isAuthenticated();

      // Allow creating new messages (sender only)
      allow create: if isAuthenticated() &&
        request.resource.data.senderId == request.auth.uid;

      // Allow updating messages only to mark them as seen
      allow update: if isAuthenticated() &&
        // Only the recipient can mark as seen
        resource.data.to == request.auth.uid;
    }

    // ðŸ”¹ Users Collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent user deletion for safety
    }
    
    // ðŸ”¹ Groups Collection
    match /groups/{groupId} {
      // Anyone authenticated can read groups
      allow read: if isAuthenticated();
      
      // Anyone authenticated can create a group - more permissive
      allow create: if isAuthenticated();
      
      // Only creator can delete
      allow delete: if isGroupCreator(groupId);
      
      // Allow updates if user is authenticated
      allow update: if isAuthenticated();

      // Group Messages Subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if false; // Messages cannot be edited or deleted
      }

      // Group Meetings Subcollection
      match /meetings/{meetingId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && 
          resource.data.createdBy == request.auth.uid;
      }

      // Group Documents Subcollection
      match /documents/{documentId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated();
      }
    }

    // ðŸ”¹ Top-level Meetings Collection
    match /meetings/{meetingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.createdBy == request.auth.uid;
    }

    // ðŸ”¹ Notifications Collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
  }
}